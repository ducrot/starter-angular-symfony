# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'de'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    # everything in Entity/ is excluded from services by default, have to add our
    # user provider manually
    App\Entity\UserRepository:


    # we have to pass settings for user tokens
    App\Security\UserTokenAuthenticator:
        arguments:
            $tokenIssuer: '%env(string:USER_TOKEN_ISSUER)%'
            $tokenLifetime: '%env(string:USER_TOKEN_LIFETIME)%'
            $tokenSecret: '%env(string:APP_SECRET)%'


    # we have to pass the path to the frontend directory to the frontend controller
    App\Controller\FrontendController:
        tags: ['controller.service_arguments']
        arguments:
            $frontendDir: '%kernel.project_dir%/%env(string:FRONTEND_DIR)%'


    SymfonyTwirpHandler\TwirpErrorSubscriber:
        arguments:
            $requestTagAttribute: "_request_id"
            $debug: '%kernel.debug%'
            $prefix: "api"


    # tag request tagger as monolog processor (no auto configure available as of symfony 4)
    App\EventSubscriber\RequestTagger:
        tags: [monolog.processor]
